{"version":3,"sources":["store/modules/Reducers.js","components/cells/Cells.js","components/utils/index.js","components/graph/Graph.js","container/bingo/BingoMain.js","container/bingo/index.js","serviceWorker.js","index.js"],"names":["START_GAME","RESTART_GAME","CLICK_NUMBER","P1_ROAD","P2_ROAD","NOW_TURN","startGame","createAction","restartGame","clickNumber","num","P1_road","P2_road","nowTurn","who","initialState","isPlaying","isRePlaying","isSelected","p1_roaded","p2_roaded","isTurn","actionCreators","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","applyStartGame","applyRestartGame","concat","toConsumableArray","applySelectNumber","payload","applyRoadNumber1P","applyRoadNumber2P","applyNowTurn","random","insert","search","numbers","Math","floor","TwoArray","array","iteratorCount","twoDimensionArray","i","slice","console","log","p1","Component","Array","p2","p1_TwoArray","p2_TwoArray","p1_count","p2_count","Cells","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","size","handleSizeChange","e","setState","target","value","name","selectNum","applyArrayState","isComplete","window","alert","j","isBingo","cell","g","countB","_this2","_this$props","utils","buttonColor","backgroundColor","react_default","a","createElement","map","row","row_i","cols","key","col_i","es_button","className","style","isActive","onClick","handleSelect","connect","dispatch","actions","BingoMain","array1","array2","roadNumToP1","roadNumToP2","handleRoad","block","handleReStart","handleStart","cells_Cells","bindActionCreators","Bingo","Boolean","location","hostname","match","store","createStore","devToolsExtension","ReactDOM","render","es","bingo","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+KAGMA,EAAa,aACbC,EAAe,eACfC,EAAe,eACfC,EAAU,UACVC,EAAU,UACVC,EAAW,WAGJC,EAAYC,YAAaP,GACzBQ,EAAcD,YAAaN,GAC3BQ,EAAcF,YAAaL,EAAc,SAAAQ,GAAG,OAAIA,IAChDC,EAAUJ,YAAaJ,EAAS,SAAAO,GAAG,OAAIA,IACvCE,EAAUL,YAAaH,EAAS,SAAAM,GAAG,OAAIA,IACvCG,EAAUN,YAAaF,EAAU,SAAAS,GAAG,OAAIA,IAG/CC,EAAe,CACjBC,WAAW,EACXC,aAAa,EACbC,WAAY,GACZC,UAAW,GACXC,UAAW,GACXC,OAAQ,MCdR,IDgFJ,IAAMC,EAAiB,CACnBhB,YACAE,cACAC,cACAE,UACAC,UACAC,WAIWU,EAzEf,WAA+C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBV,EAAca,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOC,MACX,KAAK7B,EACD,OAiBZ,SAAwBwB,GACpB,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIR,WAAW,IApBAgB,CAAeR,GAC1B,KAAKvB,EACD,OAqBZ,SAA0BuB,GACtB,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIP,aAAa,EACbC,WAAY,GACZG,OAAQ,OA1BGY,CAAiBT,GAC5B,KAAKtB,EACD,OA4BZ,SAA2BsB,EAAOd,GAC9B,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIN,WAAU,GAAAgB,OAAAJ,OAAAK,EAAA,EAAAL,CAAMN,EAAMN,YAAZ,CAAwBR,MA/BvB0B,CAAkBZ,EAAOI,EAAOS,SAC3C,KAAKlC,EACD,OAiCZ,SAA2BqB,EAAOd,GAC9B,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIL,UAAWT,IApCA4B,CAAkBd,EAAOI,EAAOS,SAC3C,KAAKjC,EACD,OAsCZ,SAA2BoB,EAAOd,GAC9B,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,UAAWV,IAzCA6B,CAAkBf,EAAOI,EAAOS,SAC3C,KAAKhC,EACD,OA2CZ,SAAsBmB,EAAOV,GACzB,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIH,OAAQP,IA9CG0B,CAAahB,EAAOI,EAAOS,SACtC,QACI,OAAOb,qEE3CNiB,EAAS,WACpB,IAEIC,EACAC,EAHEC,EAAU,GAIhB,IAAIF,EAAO,EAAGA,EAAO,GAAIA,IAGvB,IAFAE,EAAQF,GAAUG,KAAKC,MAAsB,GAAhBD,KAAKJ,UAAiB,EAE/CE,EAAS,EAAGA,EAASD,EAAQC,IAC/B,GAAGC,EAAQF,IAAWE,EAAQD,GAAQ,CACpCD,IACA,MAIN,OAAOE,GAGIG,EAAW,SAACC,GAMrB,IAN+B,IAGzBC,EAFaD,EAAXtB,OACU,EAEdwB,EAAoB,GAEfC,EAAI,EAAGA,EAAIF,EAAeE,IAClCD,EAAiB,GAAAhB,OAAAJ,OAAAK,EAAA,EAAAL,CACboB,GADa,CAEhBF,EAAMI,MAPU,EAOJD,EAPI,GAOYA,EAAI,MAIlC,OADFE,QAAQC,IAAI,uBAAyBJ,GAC5BA,YDrBPK,eENgBC,YFMX,IAAIC,MAAM,IACPN,EAAE,EAAGA,EAAE,EAAGA,IAChBI,EAAGJ,GAAK,IAAIM,MAAM,GAIxB,IADA,IAAIC,EAAK,IAAID,MAAM,GACXN,EAAE,EAAGA,EAAE,EAAGA,IAChBO,EAAGP,GAAK,IAAIM,MAAM,GAGpB,IAGIE,EACAC,EAJAC,EAAS,EACTC,EAAS,EAKPC,cACJ,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAAqC,KAAAJ,IAChBE,EAAAnC,OAAAsC,EAAA,EAAAtC,CAAAqC,KAAArC,OAAAuC,EAAA,EAAAvC,CAAAiC,GAAAO,KAAAH,KAAMH,KAKRxC,MAAQ,CACN+C,KAAM,SAPUN,EAsElBO,iBAAmB,SAAAC,GACjBR,EAAKS,SAAS,CAAEH,KAAME,EAAEE,OAAOC,SArE/BX,EAAKzC,MAAM,CACTqD,KAAMb,EAAMa,MAHEZ,oHAUCvD,uEACdyD,KAAKH,MAAMhD,8BACTmD,KAAK3C,MAAMqD,OAAOV,KAAKH,MAAM3C,wCACxB8C,KAAKH,MAAMc,UAAUpE,iBAC3ByD,KAAKH,MAAMnD,QAA0B,OAAlBsD,KAAK3C,MAAMqD,KAAY,KAAK,eACzCV,KAAKY,gBAAgBrE,iBAC3B2C,QAAQC,IAAIC,aACNY,KAAKa,WAAWnB,EAASC,mCAE/BmB,OAAOC,MAAM,kMAKHxE,GACd,IAAI,IAAIyC,EAAE,EAAGA,EAAE,EAAGA,IAChB,IAAI,IAAIgC,EAAE,EAAGA,EAAE,EAAGA,IACbxB,EAAYR,GAAGgC,KAAOzE,IACvB6C,EAAGJ,GAAGgC,GAAK,EACXtB,EAAWM,KAAKiB,QAAQ7B,EAAG,IAE1BK,EAAYT,GAAGgC,KAAOzE,IACvBgD,EAAGP,GAAGgC,GAAK,EACXrB,EAAWK,KAAKiB,QAAQ1B,EAAG,uCAMxBG,EAASC,GAClBT,QAAQC,IAAR,OAAApB,OAAmB2B,EAAnB,WAAA3B,OAAqC4B,KAClCD,EAAS,GAAKC,EAAS,KACrBD,GAAW,GAAKC,EAAW,EAC5BmB,OAAOC,MAAM,qEAEPpB,GAAY,GAAKD,EAAW,EAClCoB,OAAOC,MAAM,qEAGbD,OAAOC,MAAM,uFAMjBf,KAAKO,SAAS,CACZ1B,MAAOmB,KAAK3C,MAAMwB,yCAIb9B,EAAWmE,GAClB,GAAGlB,KAAKH,MAAMhD,UACZ,IAAI,IAAImC,EAAE,EAAEA,EAAEjC,EAAWQ,OAAOyB,IAC9B,GAAGjC,EAAWiC,KAAOkC,EACnB,OAAO,kCAUPrC,EAAMsC,GAEV,IADF,IAAIC,EAAO,EACDpC,EAAE,EAAEA,EAAE,EAAEA,IACTH,EAAM,GAAGG,KAAKmC,GAAGtC,EAAM,GAAGG,KAAKmC,GAAGtC,EAAM,GAAGG,KAAKmC,GAAGtC,EAAM,GAAGG,KAAKmC,GAAGtC,EAAM,GAAGG,KAAKmC,IACnFC,IACAlC,QAAQC,IAAI,YAAciC,IAGhC,IAAI,IAAIpC,EAAE,EAAEA,EAAE,EAAEA,IACTH,EAAMG,GAAG,KAAKmC,GAAGtC,EAAMG,GAAG,KAAKmC,GAAGtC,EAAMG,GAAG,KAAKmC,GAAGtC,EAAMG,GAAG,KAAKmC,GAAGtC,EAAMG,GAAG,KAAKmC,GACnFC,IASR,OANKvC,EAAM,GAAG,KAAKsC,GAAGtC,EAAM,GAAG,KAAKsC,GAAGtC,EAAM,GAAG,KAAKsC,GAAGtC,EAAM,GAAG,KAAKsC,GAAGtC,EAAM,GAAG,KAAKsC,GACnFC,IAECvC,EAAM,GAAG,KAAKsC,GAAGtC,EAAM,GAAG,KAAKsC,GAAGtC,EAAM,GAAG,KAAKsC,GAAGtC,EAAM,GAAG,KAAKsC,GAAGtC,EAAM,GAAG,KAAKsC,GACnFC,IAEGA,mCAGA,IAAAC,EAAArB,KAAAsB,EACqBtB,KAAKH,MAA3B9C,EADCuE,EACDvE,WAAY8B,EADXyC,EACWzC,MAClBK,QAAQC,IAAI,gBAAkBpC,GACbiD,KAAK3C,MAAd+C,KACRZ,EAAc+B,EAAevB,KAAKH,MAAM7C,WACxCyC,EAAc8B,EAAevB,KAAKH,MAAM5C,WAExC,IAAMuE,EAAc,CAAEC,gBAAiB,WAEvC,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aAAQL,EAAe1C,GAAOgD,IAAI,SAACC,EAAKC,GACtC,IAAIC,EAAOF,EACX,OAAOJ,EAAAC,EAAAC,cAAA,MAAIK,IAAKF,GAAQC,EAAKH,IAAI,SAACX,EAAMgB,GACtC,OAAOR,EAAAC,EAAAC,cAAA,MAAIK,IAAKC,GACdR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,UAAU,UAEhBC,MAAOhB,EAAKiB,SAASvF,EAAWmE,EAAKa,EAAMG,GAAOV,EAAY,KAC9De,QAAS,kBAAMlB,EAAKmB,aAAatB,KAAQA,mBApHvC7B,aAqJLoD,cAtBS,SAACpF,GAAU,IACzBN,EAAwDM,EAAxDN,WAAYG,EAA4CG,EAA5CH,OACpB,MAAO,CACLL,UAF8DQ,EAApCR,UAG1BE,aACAC,UAJ8DK,EAAzBL,UAKrCC,UAL8DI,EAAdJ,UAMhDC,WAIuB,SAACwF,GAC1B,MAAO,CACLhG,QAAU,SAACH,GACT,OAAOmG,EAASC,EAAQjG,QAAQH,KAElCoE,UAAY,SAACpE,GACX,OAAOmG,EAASC,EAAQrG,YAAYC,OAK3BkG,CAA6C7C,GG7G7CgD,cA1Db,SAAAA,EAAY/C,GAAM,IAAAC,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAAqC,KAAA4C,IAChB9C,EAAAnC,OAAAsC,EAAA,EAAAtC,CAAAqC,KAAArC,OAAAuC,EAAA,EAAAvC,CAAAiF,GAAAzC,KAAAH,KAAMH,KACDxC,MAAM,CACThB,YAAayD,EAAKD,MAAMxD,YACxBF,UAAW2D,EAAKD,MAAM1D,UACtB0G,OAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACjFC,OAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KANnEhD,mMAWZ+C,EAAStB,IACTuB,EAASvB,aAEPvB,KAAKO,SAAS,CAClBsC,SACAC,kBAEF9C,KAAKH,MAAMkD,YAAY/C,KAAK3C,MAAMwF,QAClC7C,KAAKH,MAAMmD,YAAYhD,KAAK3C,MAAMyF,kJAInC9C,KAAK3C,MAAMhB,cACV2D,KAAKiD,mDAILjD,KAAK3C,MAAMlB,YACX6D,KAAKiD,8CAGE,IAAA5B,EAAArB,KACDnD,EAAcmD,KAAKH,MAAnBhD,UAEN,OACE6E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,gBACXvF,EAEE6E,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQzE,KAAK,UAAUwF,OAAK,EAACX,QAAS,kBAAMlB,EAAK8B,kBAAjD,mCADAzB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQzE,KAAK,UAAUwF,OAAK,EAACX,QAAS,kBAAMlB,EAAK+B,gBAAjD,8BAGN1B,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,iBACbV,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAACyB,EAAD,CAAM3C,KAAK,KAAK7B,MAAOmB,KAAK3C,MAAMwF,UAEpCnB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,iBACbV,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAACyB,EAAD,CAAM3C,KAAK,KAAK7B,MAAOmB,KAAK3C,MAAMyF,mBAnDtBzD,aCmBToD,cArBS,SAACpF,GAAU,IACzBP,EAA2BO,EAA3BP,YACR,MAAO,CACLD,UAFiCQ,EAAdR,UAGnBC,gBAIuB,SAAC4F,GAC1B,MAAO,CACLvG,UAAWmH,YAAmBX,EAAQxG,UAAWuG,GACjDrG,YAAaiH,YAAmBX,EAAQtG,YAAaqG,GACrDK,YAAc,SAACxG,GACb,OAAOmG,EAASC,EAAQnG,QAAQD,KAElCyG,YAAc,SAACzG,GACb,OAAOmG,EAASC,EAAQlG,QAAQF,OAKvBkG,CAA6Cc,GCdxCC,QACW,cAA7B1C,OAAO2C,SAASC,UAEe,UAA7B5C,OAAO2C,SAASC,UAEhB5C,OAAO2C,SAASC,SAASC,MACvB,2DCPN,IAAMC,EAAQC,YAAYzG,EAAS0D,OAAOgD,mBAAqBhD,OAAOgD,qBAEtEC,IAASC,OACLtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAUL,MAAOA,GACblC,EAAAC,EAAAC,cAACsC,EAAD,OAEJC,SAASC,eAAe,SDgHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8c81d046.chunk.js","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\n\r\n// action types\r\nconst START_GAME = \"START_GAME\";\r\nconst RESTART_GAME = \"RESTART_GAME\";\r\nconst CLICK_NUMBER = \"CLICK_NUMBER\";\r\nconst P1_ROAD = \"P1_ROAD\";\r\nconst P2_ROAD = \"P2_ROAD\";\r\nconst NOW_TURN = \"NOW_TURN\";\r\n\r\n// action creators\r\nexport const startGame = createAction(START_GAME);\r\nexport const restartGame = createAction(RESTART_GAME);\r\nexport const clickNumber = createAction(CLICK_NUMBER, num => num);\r\nexport const P1_road = createAction(P1_ROAD, num => num);\r\nexport const P2_road = createAction(P2_ROAD, num => num);\r\nexport const nowTurn = createAction(NOW_TURN, who => who);\r\n\r\n//Reducer\r\nconst initialState = {\r\n    isPlaying: false,\r\n    isRePlaying: false,\r\n    isSelected: [],\r\n    p1_roaded: [],\r\n    p2_roaded: [],\r\n    isTurn: 'p1'\r\n}\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_GAME:\r\n            return applyStartGame(state)\r\n        case RESTART_GAME:\r\n            return applyRestartGame(state);\r\n        case CLICK_NUMBER:\r\n            return applySelectNumber(state, action.payload);\r\n        case P1_ROAD:\r\n            return applyRoadNumber1P(state, action.payload);\r\n        case P2_ROAD:\r\n            return applyRoadNumber2P(state, action.payload);\r\n        case NOW_TURN:\r\n            return applyNowTurn(state, action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Reducer Function\r\nfunction applyStartGame(state) {\r\n    return {\r\n        ...state,\r\n        isPlaying: true\r\n    }\r\n}\r\nfunction applyRestartGame(state) {\r\n    return {\r\n        ...state,\r\n        isRePlaying: true,\r\n        isSelected: [],\r\n        isTurn: 'p1'\r\n    }\r\n}\r\n\r\nfunction applySelectNumber(state, num) {\r\n    return {\r\n        ...state,\r\n        isSelected: [...state.isSelected, num]\r\n    }\r\n}\r\n\r\nfunction applyRoadNumber1P(state, num) {\r\n    return {\r\n        ...state,\r\n        p1_roaded: num\r\n    }\r\n}\r\n\r\nfunction applyRoadNumber2P(state, num) {\r\n    return {\r\n        ...state,\r\n        p2_roaded: num\r\n    }\r\n}\r\n\r\nfunction applyNowTurn(state, who) {\r\n    return {\r\n        ...state,\r\n        isTurn: who\r\n    }\r\n}\r\n\r\nconst actionCreators = {\r\n    startGame,\r\n    restartGame,\r\n    clickNumber,\r\n    P1_road,\r\n    P2_road,\r\n    nowTurn\r\n}\r\n\r\nexport { actionCreators };\r\nexport default reducer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actionCreators as actions } from '../../store/modules/Reducers';\nimport * as utils from '../utils'; \nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport '../../App.css';\nimport Graph from '../graph/Graph';\n\n\nlet p1 = new Array(5);\n    for(let i=0; i<5; i++){\n      p1[i] = new Array(5);\n  }\n\nlet p2 = new Array(5);\nfor(let i=0; i<5; i++){\n  p2[i] = new Array(5);\n  }\n\nlet p1_count=0;\nlet p2_count=0;\n\nlet p1_TwoArray;\nlet p2_TwoArray;\n\nclass Cells extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      name: props.name\n    }\n  }\n  state = {\n    size: 'large',\n  };\n\n  async handleSelect(num) {\n    if(this.props.isPlaying){\n      if(this.state.name===this.props.isTurn){\n        await this.props.selectNum(num)\n        this.props.nowTurn(this.state.name==='p1'?'p2':'p1')\n        await this.applyArrayState(num);\n        console.log(p1)\n        await this.isComplete(p1_count,p2_count);  \n      }else{\n        window.alert(\"잘못된 차례입니다.\")\n      }   \n    }\n  }\n\n  applyArrayState(num){\n    for(let i=0; i<5; i++) {\n      for(let j=0; j<5; j++) {\n        if(p1_TwoArray[i][j] === num){\n          p1[i][j] = 1;\n          p1_count = this.isBingo(p1,1);\n        }\n        if(p2_TwoArray[i][j] === num){\n          p2[i][j] = 1;\n          p2_count = this.isBingo(p2,1);\n        }\n      }\n    } \n  }\n\n  isComplete(p1_count,p2_count){\n    console.log(`1p: ${p1_count} , 2p: ${p2_count}`)\n    if(p1_count>4 || p2_count>4){\n      if(p1_count >=5 && p2_count < 5){\n        window.alert(\"P1가 빙고를 완성했습니다.\")\n      } //1p win\n      else if(p2_count >= 5 && p1_count < 5){\n        window.alert(\"P2가 빙고를 완성했습니다.\")\n      }//2p win\n      else{\n        window.alert(\"무승부 입니다.\")\n      }//무승부\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      array: this.state.array\n    })\n  }\n\n  isActive(isSelected,cell){  \n    if(this.props.isPlaying){\n      for(let i=0;i<isSelected.length;i++){\n        if(isSelected[i] === cell) {        \n          return true;\n        }\n      }\n    }\n  }\n\n  handleSizeChange = e => {\n    this.setState({ size: e.target.value });\n  };\n\n  isBingo(array,g){\n    let countB=0;\n      for(let i=0;i<5;i++){\n          if(array[0][i]===g&&array[1][i]===g&&array[2][i]===g&&array[3][i]===g&&array[4][i]===g){ //세로\n            countB++;\n            console.log('countB : ' + countB)\n          }\n      }\n      for(let i=0;i<5;i++){\n          if(array[i][0]===g&&array[i][1]===g&&array[i][2]===g&&array[i][3]===g&&array[i][4]===g){ //가로\n            countB++;\n          }\n      }\n      if(array[0][0]===g&&array[1][1]===g&&array[2][2]===g&&array[3][3]===g&&array[4][4]===g){ //대각선1\n        countB++;\n      }\n      if(array[0][4]===g&&array[1][3]===g&&array[2][2]===g&&array[3][1]===g&&array[4][0]===g){ //대각선2\n        countB++;\n      }\n    return countB;\n  }\n\n  render() {\n    let { isSelected, array } = this.props;\n    console.log('isSelected : ' + isSelected)\n    const { size } = this.state;\n    p1_TwoArray = utils.TwoArray(this.props.p1_roaded);\n    p2_TwoArray = utils.TwoArray(this.props.p2_roaded);\n\n    const buttonColor = { backgroundColor: '#68D17D' }\n\n    return (\n      <div>\n        <table>\n          <tbody>{utils.TwoArray(array).map((row, row_i) => {\n            let cols = row;\n            return <tr key={row_i}>{cols.map((cell, col_i) => {\n              return <td key={col_i}>\n                <Button className=\"btnSize\"\n                //클릭후 스타일지정\n                  style={this.isActive(isSelected,cell,row_i,col_i)?buttonColor:null}\n                  onClick={() => this.handleSelect(cell)}>{cell}\n                </Button></td>\n              })}</tr>\n            })}</tbody>\n          </table>\n          {/* <Graph></Graph> */}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isSelected, isTurn, isPlaying, p1_roaded, p2_roaded } = state;\n  return {\n    isPlaying,\n    isSelected,\n    p1_roaded,\n    p2_roaded,\n    isTurn\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    nowTurn : (num) => {\n      return dispatch(actions.nowTurn(num))\n    },\n    selectNum : (num) => {\n      return dispatch(actions.clickNumber(num))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cells);\n\n","export const random = () => {\n  const numbers = [];\n\n  let insert;\n  let search;\n  for(insert=0; insert<25; insert++){\n    numbers[insert] = Math.floor(Math.random() * 25) + 1;\n      \n    for(search = 0; search < insert; search ++){\n      if(numbers[insert] == numbers[search]){\n        insert--;\n        break; \n      }\n    }\n  }\n  return numbers;\n}\n\nexport const TwoArray = (array) => {\n    const { length } = array;\n    const maxLength = 5;\n    const iteratorCount = length / maxLength;\n    let twoDimensionArray = [];\n\n    for (let i = 0; i < iteratorCount; i++) {\n\t    twoDimensionArray = [\n\t\t    ...twoDimensionArray,\n\t\t    array.slice(i * maxLength, (i + 1) * maxLength),\n\t    ];\n    }\n  console.log('twoDimensionArray : ' + twoDimensionArray)\n    return twoDimensionArray;\n}","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nclass Graph extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button></Button>\r\n                <Button></Button>\r\n                <Button></Button>\r\n                <Button></Button>\r\n                <Button></Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Graph;","import React, { Component } from 'react';\nimport * as utils from '../../components/utils'; \nimport Cell from '../../components/cells/Cells';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport '../../App.css';\n\nclass BingoMain extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      restartGame: this.props.restartGame,\n      startGame: this.props.startGame,\n      array1: ['','','','','','','','','','','','','','','','','','','','','','','','',''],\n      array2: ['','','','','','','','','','','','','','','','','','','','','','','','','']\n    }\n  }\n\n  async handleRoad() {\n    let array1 = utils.random();\n    let array2 = utils.random();\n\n    await this.setState({\n      array1,\n      array2\n    }) \n    this.props.roadNumToP1(this.state.array1);\n    this.props.roadNumToP2(this.state.array2);\n  }\n\n  handleReStart() {\n   this.state.restartGame();\n    this.handleRoad();\n  }\n\n  handleStart() {\n    this.state.startGame();\n    this.handleRoad()\n  }\n\n  render() {\n    let { isPlaying } = this.props;\n    \n    return(\n      <div>\n        <div>\n          <div className=\"App position\">\n            {!isPlaying \n              ? <Button type=\"primary\" block onClick={() => this.handleStart()}>게임 시작</Button> \n              : <Button type=\"primary\" block onClick={() => this.handleReStart()}>게임 재시작</Button>}\n          </div>\n          <div className=\"container App\">\n            <p>P1</p>\n            <Cell name=\"p1\" array={this.state.array1}/>\n          </div>\n          <div></div>\n          <div className=\"container App\">\n            <p>P2</p>\n            <Cell name=\"p2\" array={this.state.array2}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BingoMain;\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators as actions } from '../../store/modules/Reducers';\nimport Bingo from './BingoMain';\n\nconst mapStateToProps = (state) => {\n  const { isRePlaying, isPlaying } = state;\n  return {\n    isPlaying,\n    isRePlaying\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startGame: bindActionCreators(actions.startGame, dispatch),\n    restartGame: bindActionCreators(actions.restartGame, dispatch),\n    roadNumToP1 : (num)=>{\n      return dispatch(actions.P1_road(num))\n    },\n    roadNumToP2 : (num)=>{\n      return dispatch(actions.P2_road(num))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bingo);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Bingo from './container/bingo';\nimport * as serviceWorker from './serviceWorker';\n\n// Redux 관련 불러오기\nimport reducer from './store/modules/Reducers';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\n// 스토어 생성\nconst store = createStore(reducer, window.devToolsExtension && window.devToolsExtension());\n\nReactDOM.render(\n    <Provider store={store}>\n        <Bingo />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}